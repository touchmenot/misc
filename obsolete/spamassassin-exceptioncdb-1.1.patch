Adds a new configuration directive, dnsbl_exception_cdb. Say:

dnsbl_exception_cdb /path/to/tcpserver/style/cdbfile.cdb

in your SpamAssassin configuration to exempt IP addresses listed as
RELAYCLIENTs from DNSBL checking.

Since obsoleted by SpamAssassin's trusted_networks code.

Author: John Morrissey <jwm@horde.net>
This patch can be distributed under the same terms as SpamAssassin itself.

********************************************************************
* This software is distributed in the hope that it will be useful, *
* but WITHOUT ANY WARRANTY; without even the implied warranty of   *
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.             *
********************************************************************

diff -urN Mail-SpamAssassin-2.60.orig/lib/Mail/SpamAssassin/Conf.pm Mail-SpamAssassin-2.60/lib/Mail/SpamAssassin/Conf.pm
--- Mail-SpamAssassin-2.60.orig/lib/Mail/SpamAssassin/Conf.pm	Mon Sep 22 01:05:50 2003
+++ Mail-SpamAssassin-2.60/lib/Mail/SpamAssassin/Conf.pm	Thu Nov  6 20:00:13 2003
@@ -242,6 +242,8 @@
   $self->add_default_spam_headers();	# always run this first
   $self->add_default_ham_headers();	# always run this second
 
+  $self->{dnsbl_exception_cdb} = '';
+
   $self;
 }
 
@@ -2463,6 +2465,15 @@
       $self->{user_scores_sql_table} = $1; next;
     }
 
+=item dnsbl_exception_cdb cdbfilename
+
+A qmail-style CDB file containing IP addresses to skip DNSBL checks for.
+
+=cut
+    if(/^dnsbl[-_]exception[-_]cdb\s+(\S+)$/) {
+      $self->{dnsbl_exception_cdb} = $1; next;
+    }
+
 # Michael 'Moose' Dinn <dinn@twistedpair.ca>
 # For integration with horde preferences system
 # 20020831
diff -urN Mail-SpamAssassin-2.60.orig/lib/Mail/SpamAssassin/EvalTests.pm Mail-SpamAssassin-2.60/lib/Mail/SpamAssassin/EvalTests.pm
--- Mail-SpamAssassin-2.60.orig/lib/Mail/SpamAssassin/EvalTests.pm	Mon Sep 22 01:05:50 2003
+++ Mail-SpamAssassin-2.60/lib/Mail/SpamAssassin/EvalTests.pm	Thu Nov  6 20:12:04 2003
@@ -1211,9 +1211,24 @@
   }
   dbg("But only inspecting the following IPs: ".join(", ", @ips), "rbl", -3);
 
+  my %cdb;
+  if ($self->{conf}->{dnsbl_exception_cdb}) {
+    use CDB_File;
+    tie(%cdb, 'CDB_File', $self->{conf}->{dnsbl_exception_cdb}) or dbg("Couldn't open " . $self->{conf}->{dnsbl_exception_cdb}, 'rbl', -1);
+  }
+
   eval {
-    foreach my $ip (@ips) {
+    IP: foreach my $ip (@ips) {
       next unless ($ip =~ /(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/);
+      if (tied(%cdb)) {
+        foreach ("$1.$2.$3.$4", "$1.$2.$3.", "$1.$2.", "$1.") {
+          if (exists $cdb{$_} && $cdb{$_} =~ m#\+RELAYCLIENT=#) {
+            dbg ("Skipping $ip, $_ exists in dnsbl_exception_cdb", 'rbl', -3);
+            next IP;
+          }
+        }
+      }
+
       $self->do_rbl_lookup($rule, $set, $type, $rbl_server,
 			   "$4.$3.$2.$1.$rbl_server", $subtest);
     }
