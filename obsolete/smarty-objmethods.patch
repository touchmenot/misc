The Smarty template engine for PHP (http://smarty.php.net/) doesn't allow
you to call the methods of assigned objects within Smarty tags.

For example, you can't do:

$smarty->assign('obj', $myObj);

and in your template:

{$obj->getData('yo-yo')}

This patch updates Smarty 2.3.1 to allow this.

This patch is no longer maintained.


Author: John Morrissey <jwm@horde.net>
This patch is distributed under the same terms as Smarty itself.


Index: Smarty_Compiler.php
===================================================================
RCS file: /staff/jwm/.cvs/serviceman/lib/Smarty/Smarty_Compiler.php,v
retrieving revision 1.2
diff -u -r1.2 Smarty_Compiler.php
--- Smarty_Compiler.php	14 Aug 2002 01:25:05 -0000	1.2
+++ Smarty_Compiler.php	14 Aug 2002 17:46:41 -0000
@@ -192,6 +192,7 @@
             $plugins_code = '<?php $this->_load_plugins(array(';
             foreach ($this->_plugin_info as $plugin_type => $plugins) {
                 foreach ($plugins as $plugin_name => $plugin_info) {
+                    $plugin_name = str_replace("'", "\\'", $plugin_name);
                     $plugins_code .= "\narray('$plugin_type', '$plugin_name', '$plugin_info[0]', $plugin_info[1], ";
                     $plugins_code .= $plugin_info[2] ? 'true),' : 'false),';
                 }
@@ -235,7 +236,7 @@
 
         /* If the tag name matches a variable or section property definition,
            we simply process it. */
-        if (preg_match('!^\$\w+(?>(\[(\d+|\$\w+|\w+(\.\w+)?)\])|((\.|->)\$?\w+))*(?>\|@?\w+(:(?>' . $qstr_regexp . '|[^|]+))*)*$!', $tag_command) ||   // if a variable
+        if (preg_match('!^\$\w+(?>(\[(\d+|\$\w+|\w+(\.\w+)?)\])|((\.|->)\$?[A-Za-z0-9_\(\)\'"\$]+))*(?>\|@?\w+(:(?>' . $qstr_regexp . '|[^|]+))*)*$!', $tag_command) ||   // if a variable
             preg_match('!^#(\w+)#(?>\|@?\w+(:(?>' . $qstr_regexp . '|[^|]+))*)*$!', $tag_command)     ||  // or a configuration variable
             preg_match('!^%\w+\.\w+%(?>\|@?\w+(:(?>' . $qstr_regexp . '|[^|]+))*)*$!', $tag_command)) {    // or a section property
             settype($tag_command, 'array');
@@ -490,6 +491,7 @@
             $arg_list[] = "'$arg_name' => $arg_value";
         }
 
+        $tag_command = str_replace("'", "\\'", $tag_command);
         return "<?php \$this->_plugins['function']['$tag_command'][0](array(".implode(',', (array)$arg_list)."), \$this); if(\$this->_extract) { extract(\$this->_tpl_vars); \$this->_extract=false; } ?>";
     }
 
@@ -1075,7 +1077,7 @@
     {
         $qstr_regexp = '"[^"\\\\]*(?:\\\\.[^"\\\\]*)*"|\'[^\'\\\\]*(?:\\\\.[^\'\\\\]*)*\'';
 
-        $var_exprs = preg_grep('!^\$\w+(?>(\[(\d+|\$\w+|\w+(\.\w+)?)\])|((\.|->)\$?\w+))*(?>\|@?\w+(:(?>' .  $qstr_regexp . '|[^|]+))*)*$!', $tokens);
+        $var_exprs = preg_grep('!^\$\w+(?>(\[(\d+|\$\w+|\w+(\.\w+)?)\])|((\.|->)\$?[A-Za-z0-9_\(\)\'"\$]+))*(?>\|@?\w+(:(?>' .  $qstr_regexp . '|[^|]+))*)*$!', $tokens);
         $conf_var_exprs = preg_grep('!^#(\w+)#(?>\|@?\w+(:(?>' . $qstr_regexp . '|[^|]+))*)*$!', $tokens);
         $sect_prop_exprs = preg_grep('!^%\w+\.\w+%(?>\|@?\w+(:(?>' .  $qstr_regexp .  '|[^|]+))*)*$!', $tokens);
 
@@ -1114,7 +1116,7 @@
 			$modifiers = empty($modifiers) ? $_default_mod_string : $_default_mod_string . '|' . $modifiers;
 		}
 			
-        preg_match_all('!\[(?:\$\w+|\w+(\.\w+)?)\]|(->|\.)\$?\w+|^\w+!', $var_ref, $match);
+        preg_match_all('!\[(?:\$\w+|\w+(\.\w+)?)\]|(->|\.)\$?[A-Za-z0-9_\(\)\'"\$]+|^\w+!', $var_ref, $match);
         $indexes = $match[0];
         $var_name = array_shift($indexes);
 
