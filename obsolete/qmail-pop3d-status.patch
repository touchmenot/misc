Adds Status: and X-UIDL: headers to POPped messages.

This patch is no longer maintained.

Author: unknown
Version: 2

--- qmail-1.03/qmail-pop3d.c.orig	Mon Jun 15 12:53:16 1998
+++ qmail-1.03/qmail-pop3d.c	Tue Jul 31 15:39:56 2001
@@ -17,6 +17,19 @@
 #include "timeoutread.h"
 #include "timeoutwrite.h"

+/*
+ * Define to include a "Status: " header in the mail that reflects whether
+ * the mail has been read.
+ */
+
+#define USE_STATUS_HEADER
+
+/*
+ * Define to include a "X-UIDL: " header to help some clients.
+ */
+
+#define USE_XUIDL_HEADER
+
 void die() { _exit(0); }

 int saferead(fd,buf,len) int fd; char *buf; int len;
@@ -84,18 +97,48 @@ void printfn(fn) char *fn;
 char strnum[FMT_ULONG];
 stralloc line = {0};

-void blast(ssfrom,limit)
+stralloc filenames = {0};
+prioq pq = {0};
+
+struct message {
+  int flagdeleted;
+  int flagread;
+  unsigned long size;
+  char *fn;
+} *m;
+int numm;
+
+void blast(ssfrom,limit,i)
 substdio *ssfrom;
 unsigned long limit;
+int i;
 {
   int match;
   int inheaders = 1;
+  int extradone = 0;

   for (;;) {
     if (getln(ssfrom,&line,&match,'\n') != 0) die();
     if (!match && !line.len) break;
     if (match) --line.len; /* no way to pass this info over POP */
     if (limit) if (!inheaders) if (!--limit) break;
+    if (inheaders && !extradone) {
+      /* add our status notification here... */
+#if defined(USE_STATUS_HEADER) || defined(USE_XUIDL_HEADER)
+#ifdef  USE_STATUS_HEADER
+      if (m[i].flagread)
+        put("Status: RO\r\n",12);
+      else
+        put("Status:  U\r\n",12);
+#endif
+#ifdef USE_XUIDL_HEADER
+      put("X-UIDL: ",8);
+      put(m[i].fn+4,str_chr(m[i].fn+4,':') ? str_chr(m[i].fn+4,':') : str_chr(m[i].fn+4,0));
+      put("\r\n",2);
+#endif
+      extradone = 1;
+#endif
+    }
     if (!line.len)
       inheaders = 0;
     else
@@ -109,16 +152,6 @@ unsigned long limit;
   flush();
 }

-stralloc filenames = {0};
-prioq pq = {0};
-
-struct message {
-  int flagdeleted;
-  unsigned long size;
-  char *fn;
-} *m;
-int numm;
-
 int last = 0;

 void getlist()
@@ -139,22 +172,32 @@ void getlist()
     prioq_delmin(&pq);
     m[i].fn = filenames.s + pe.id;
     m[i].flagdeleted = 0;
+    m[i].flagread = (m[i].fn[0]=='c');
     if (stat(m[i].fn,&st) == -1)
       m[i].size = 0;
-    else
-      m[i].size = st.st_size;
+    else {
+#ifdef USE_STATUS_HEADER
+     m[i].size = st.st_size + 12; /* account for the 'NEW' status header */
+#else
+     m[i].size = st.st_size ;
+#endif
+#ifdef USE_XUIDL_HEADER
+     /* account for the 'X-UIDL' status header */
+     m[i].size += (str_chr(m[i].fn,':') ? str_chr(m[i].fn,':') : str_chr(m[i].fn,0) ) + 6;
+#endif
+    }
   }
 }

 void pop3_stat()
 {
-  int i;
+  int i, j = 0;
   unsigned long total;

   total = 0;
-  for (i = 0;i < numm;++i) if (!m[i].flagdeleted) total += m[i].size;
+  for (i = 0;i < numm;++i) if (!m[i].flagdeleted) { total += m[i].size; j++; }
   puts("+OK ");
-  put(strnum,fmt_uint(strnum,numm));
+  put(strnum,fmt_uint(strnum,j));
   puts(" ");
   put(strnum,fmt_ulong(strnum,total));
   puts("\r\n");
@@ -252,7 +295,9 @@ void pop3_list(arg) char *arg; { dolisti

 substdio ssmsg; char ssmsgbuf[1024];

-void pop3_top(arg) char *arg;
+void do_send(arg,updateread)
+char *arg;
+int updateread;
 {
   int i;
   unsigned long limit;
@@ -269,17 +314,21 @@ void pop3_top(arg) char *arg;
   if (fd == -1) { err_nosuch(); return; }
   okay();
   substdio_fdbuf(&ssmsg,read,fd,ssmsgbuf,sizeof(ssmsgbuf));
-  blast(&ssmsg,limit);
+  blast(&ssmsg,limit,i);
   close(fd);
+  if (updateread) m[i].flagread=1;
 }

+void pop3_top( arg ) char *arg; { do_send(arg,0); }
+void pop3_retr( arg ) char *arg; { do_send(arg,1); }
+
 struct commands pop3commands[] = {
   { "quit", pop3_quit, 0 }
 , { "stat", pop3_stat, 0 }
 , { "list", pop3_list, 0 }
 , { "uidl", pop3_uidl, 0 }
 , { "dele", pop3_dele, 0 }
-, { "retr", pop3_top, 0 }
+, { "retr", pop3_retr, 0 }
 , { "rset", pop3_rset, 0 }
 , { "last", pop3_last, 0 }
 , { "top", pop3_top, 0 }
