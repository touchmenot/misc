Adds a new configuration directive, dnsbl_exception_cdb. Say:

dnsbl_exception_cdb /path/to/tcpserver/style/cdbfile.cdb

in your SpamAssassin configuration to exempt IP addresses listed as
RELAYCLIENTs from DNSBL checking.

Since obsoleted by SpamAssassin's trusted_networks code.

Author: John Morrissey <jwm@horde.net>
This patch can be distributed under the same terms as SpamAssassin itself.

********************************************************************
* This software is distributed in the hope that it will be useful, *
* but WITHOUT ANY WARRANTY; without even the implied warranty of   *
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.             *
********************************************************************

Index: Conf.pm
===================================================================
RCS file: /cvsroot/spamassassin/spamassassin/lib/Mail/SpamAssassin/Conf.pm,v
retrieving revision 1.159
diff -u -u -r1.159 Conf.pm
--- lib/Mail/SpamAssassin/Conf.pm	27 Jan 2003 18:46:57 -0000	1.159
+++ lib/Mail/SpamAssassin/Conf.pm	28 Jan 2003 21:11:06 -0000
@@ -197,6 +197,8 @@
   $self->{user_scores_sql_password} = '';
   $self->{user_scores_sql_table} = 'userpref'; # Morgan - default to userpref for backwords compatibility
 
+  $self->{dnsbl_exception_cdb} = '';
+
   $self->{_unnamed_counter} = 'aaaaa';
 
   $self;
@@ -1957,6 +1959,15 @@
 =cut
     if(/^user_scores_sql_table\s+(\S+)$/) {
       $self->{user_scores_sql_table} = $1; next;
+    }
+
+=item dnsbl_exception_cdb cdbfilename
+
+A qmail-style CDB file containing IP addresses to skip DNSBL checks for.
+
+=cut
+    if(/^dnsbl[-_]exception[-_]cdb\s+(\S+)$/) {
+      $self->{dnsbl_exception_cdb} = $1; next;
     }
 
 ###########################################################################
Index: EvalTests.pm
===================================================================
RCS file: /cvsroot/spamassassin/spamassassin/lib/Mail/SpamAssassin/EvalTests.pm,v
retrieving revision 1.394
diff -u -u -r1.394 EvalTests.pm
--- lib/Mail/SpamAssassin/EvalTests.pm	10 Apr 2003 22:00:44 -0000	1.394
+++ lib/Mail/SpamAssassin/EvalTests.pm	13 Apr 2003 15:52:20 -0000
@@ -1210,12 +1210,18 @@
   # my $already_matched_in_other_zones = ' '.$self->{$set}->{rbl_matches_found}.' ';
   my $found = 0;
 
+  my %cdb;
+  if ($self->{conf}->{dnsbl_exception_cdb}) {
+    use CDB_File;
+    tie(%cdb, 'CDB_File', $self->{conf}->{dnsbl_exception_cdb}) or dbg("Couldn't open " . $self->{conf}->{dnsbl_exception_cdb}, 'rbl', -1);
+  }
+
   # First check that DNS is available. If not, do not perform this check.
   # Stop after the first positive.
   eval {
     my $i=0;
     my ($b1,$b2,$b3,$b4);
-    foreach my $ip (@ips) {
+    IP: foreach my $ip (@ips) {
       $i++;
       # Some of the matches in other zones, like a DUL match on a first hop 
       # may be negated by another rule, so preventing a match in two zones
@@ -1233,10 +1239,23 @@
       next unless ($ip =~ /(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/);
      ($b1, $b2, $b3, $b4) = ($1, $2, $3, $4);
 
+      if (tied(%cdb)) {
+        foreach ("$b1.$b2.$b3.$b4", "$b1.$b2.$b3.", "$b1.$b2.", "$b1.") {
+          if ($cdb{$_} =~ m#\+RELAYCLIENT=#) {
+            dbg ("Skipping $ip, $_ exists in dnsbl_exception_cdb", 'rbl', -1);
+            next IP;
+          }
+        }
+      }
+
       $found = $self->do_rbl_lookup ($set, $use_txt_query, "$b4.$b3.$b2.$b1.".$rbl_domain, $ip, $found);
       dbg("Got $found on $ip (item $i)", "rbl", -3);
     }
   };
+
+  if (tied(%cdb)) {
+    untie(%cdb);
+  }
 
   dbg("Check_rbl returning $found", "rbl", -3);
   $found;
